name: Test Manual Versioning

env:
  CI: true
  GITHUB_BUILD_NUMBER: ${{ github.run_number }}
  GITHUB_BUILD_ID: ${{ github.run_id }}
  GITHUB_TOKEN: ${{ secrets.AHMAD_GITHUB_TOKEN }}


on:
  push:
    branches:
      - main
  release:
    types:
      - published
jobs:
  release:
    name: Push Event
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Configure Git user
        run: |
          git config --global user.email "ahmed.elkhateeb@ww.com"
          git config --global user.name "Ahmad Elkhateeb"
      - name: Test Setup
        run: |
          echo Running on Branch ${GITHUB_REF##*/}
          npx node test.js
          echo "TAG=$(cat build-result.json | jq .tag -r)" >> $GITHUB_ENV
          echo Running TAG $TAG
      - name: Upload build-result as artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-result
          path: build-result.json
      - name: Extract version number from commit message
        run: |
          commit_message=$(git log -1 --pretty=format:"%s")
          pattern="Release v([0-9]+\.[0-9]+\.[0-9]+)"

          if [[ $commit_message =~ $pattern ]]; then
            version=${BASH_REMATCH[1]}
            echo "RELEASE_VERSION=$version" >> $GITHUB_ENV
          else
            echo "Commit message doesn't contain the following desired pattern: Release vx.xx.x"
            exit 1
          fi
      - name: Run Release It
        run: |
          if [[ -z "${RELEASE_VERSION}" ]]; then
            echo "Release version not found. Exiting."
            exit 1
          fi
          echo Pushing on Branch ${GITHUB_REF##*/}
          npx release-it ${{ env.RELEASE_VERSION }} --only-version

  test-arts:
    name: Test Artifacts
    needs: release
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Download build-result from artifact
        uses: actions/download-artifact@v2
        with:
          name: build-result
          path: build-result.json
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          echo Running on Branch ${GITHUB_REF##*/}
          sudo echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
          ls -la
          echo "TAG=$(cat build-result.json | jq .tag -r)" >> $GITHUB_ENV
      - name: Echo
        run: |
          echo Running Release on Branch ${GITHUB_REF##*/} with Tag ${TAG}

  deploy-main:
    name: Deploy To Main
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && !github.event.release.prerelease
    steps:
      - uses: actions/checkout@v2
      - name: Echo
        run: |
          echo Running Release on Branch ${GITHUB_REF##*/}
